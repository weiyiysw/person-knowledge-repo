import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,o as a}from"./app-BVzTyLOJ.js";const t={};function r(o,l){return a(),n("div",null,l[0]||(l[0]=[e("h1",{id:"设计原则",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#设计原则"},[e("span",null,"设计原则")])],-1),e("p",null,"SOLID原则",-1),e("ul",null,[e("li",null,"S：单一职责，尽量减少类负责的功能，保持单一。"),e("li",null,"O：开闭原则，对修改关闭，对扩展开放。"),e("li",null,"L：里氏替换，任何情况下子类都能替换父类并且程序能够正常运行。"),e("li",null,"I：接口隔离，接口与接口之间不能互相影响"),e("li",null,"D：依赖倒置原则，应该依赖接口和抽象类，而不是具体类和函数。")],-1),e("p",null,"还有迪米特原则，即最小知道原则，一个类应该高内聚，少与其他类发送耦合，便于代码维护。",-1)]))}const c=i(t,[["render",r],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/gof/principle/","title":"设计原则","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"createdTime":1724591575000,"updatedTime":1724591575000,"contributors":[{"name":"weiyiysw","email":"weiyiysw37@gmail.com","commits":1}]},"readingTime":{"minutes":0.5,"words":150},"filePathRelative":"gof/principle/readme.md","localizedDate":"2024年8月25日"}');export{c as comp,d as data};
